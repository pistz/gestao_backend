// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Definição da tabela 'Turma'
model Course {
  id           String       @id @default(uuid())
  name         String
  startingYear Int
  students     Students[]
  school       School       @relation(fields: [schoolId], references: [id])
  schoolId     String
  createdAt    DateTime     @default(now())
  modifiedAt   DateTime     @updatedAt
}

// Definição da tabela 'Aluno'
model Students {
  id           String       @id @default(uuid())
  name         String
  email        String       @unique
  attendances  AttendanceList[]
  course       Course[]      
  courseId     String
  school       School       @relation(fields: [schoolId], references: [id])
  schoolId     String
  createdAt    DateTime     @default(now())
  modifiedAt   DateTime     @updatedAt
}

// Definição da tabela 'ListaPresenca'
model AttendanceList {
  id              String       @id @default(uuid())
  attendanceDate  DateTime
  isPresent       Boolean
  student         Students[]   
  studentId       String
  createdAt       DateTime     @default(now())
  modifiedAt      DateTime     @updatedAt
}

// Definição da tabela 'Usuario'
model User {
  id                String       @id @default(uuid())
  userFirstName     String
  userLastName      String
  email             String       @unique
  password          String
  role              Role         @default(DESK)
  school            School       @relation(fields: [schoolId], references: [id])
  schoolId          String        
  createdAt         DateTime     @default(now())
  modifiedAt        DateTime     @updatedAt
}

model School {
  id                String        @id @default(uuid())
  schoolName        String        @unique
  users             User[]
  students          Students[]
  courses           Course[]
  createdAt         DateTime     @default(now())
  modifiedAt        DateTime     @updatedAt
}

enum Role {
  ADMIN
  DESK
  PROFESSOR
}